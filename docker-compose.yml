version: '3.8'

services:
  orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.orchestrator
    container_name: homie_orchestrator
    restart: unless-stopped
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config:/config
      - ./data:/data
      - ./backups:/backups
      - /tmp:/tmp
    environment:
      - ORCHESTRATOR_DATA_PATH=/data
      - ORCHESTRATOR_CONFIG_PATH=/config
      - ORCHESTRATOR_BACKUP_PATH=/backups
      - DOCKER_HOST=unix:///var/run/docker.sock
    ports:
      - "8080:8080"  # Orchestrator API
    networks:
      - homie_network
    labels:
      - "io.homie.orchestrator=true"
      - "io.homie.role=supervisor"

  # Managed AI service - this would be managed by the orchestrator
  homie_ai:
    image: homie/ai:latest
    container_name: homie_ai
    restart: unless-stopped
    depends_on:
      - orchestrator
    volumes:
      - ./config/ai:/config
      - ./data/ai:/data
    environment:
      - ORCHESTRATOR_URL=http://orchestrator:8080
      - OLLAMA_BASE_URL=http://ollama:11434
    ports:
      - "8080:8080"  # Open WebUI
      - "3000:3000"  # React Chat Interface
    networks:
      - homie_network
    labels:
      - "io.homie.managed=true"
      - "io.homie.service=ai"

  # Ollama AI service managed by orchestrator
  ollama:
    image: ollama/ollama:latest
    container_name: homie_ollama
    restart: unless-stopped
    depends_on:
      - orchestrator
    volumes:
      - ./data/ollama:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    ports:
      - "11434:11434"
    networks:
      - homie_network
    labels:
      - "io.homie.managed=true"
      - "io.homie.service=ollama"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Database service managed by orchestrator
  postgres:
    image: postgres:15
    container_name: homie_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=homie
      - POSTGRES_USER=homie
      - POSTGRES_PASSWORD=homie_password
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - homie_network
    labels:
      - "io.homie.managed=true"
      - "io.homie.service=database"

  # Redis service for caching and pub/sub
  redis:
    image: redis:7-alpine
    container_name: homie_redis
    restart: unless-stopped
    volumes:
      - ./data/redis:/data
    networks:
      - homie_network
    labels:
      - "io.homie.managed=true"
      - "io.homie.service=cache"

networks:
  homie_network:
    driver: bridge
    name: homie_network

volumes:
  orchestrator_data:
  orchestrator_config:
  orchestrator_backups:
